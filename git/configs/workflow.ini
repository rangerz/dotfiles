[pull]
    # 使用 rebase 而不是 merge 來執行 git pull，保持更乾淨的歷史紀錄
    # Use rebase instead of merge for git pull to keep history cleaner
    rebase = true

[rebase]
    # 在 rebase 前自動 stash 暫存未提交的變更，避免衝突
    # Auto stash local changes before rebase to avoid conflicts
    autoStash = true

    # 在 rebase 時，同步更新其他指向舊 commit 的 refs (branch, tag...)
    # Update other refs (branches, tags) pointing to old commits during rebase
    updateRefs = true

    # 保留 merge commit 的結構，避免 rebase 後失去原本的合併脈絡
    # Preserve merge commits during rebase instead of flattening them
    rebaseMerges = true

[merge]
    # 只允許 fast-forward merge，不產生額外的 merge commit
    # Only allow fast-forward merges to avoid extra merge commits
    ff = only

    # 需要時允許正常化行尾/濾鏡後再合併，跨平台有助減衝突
    # Allow renormalization before merge; helps cross-platform line endings
    renormalize = true

    # 在 merge commit message 中包含被合併的 commit 摘要 (若有產生 merge commit)
    # Include summaries of merged commits in the merge commit message
    log = true

[push]
    # 當第一次 push 時，自動設定上游 remote tracking branch
    # Automatically set upstream (remote tracking) branch on first push
    autoSetupRemote = true

    # 預設 push 行為，僅推送當前分支到對應的上游分支
    # Default push behavior: push current branch to its upstream branch
    default = simple

    # push 時自動包含對應的 tag (若 tag 指向的 commit 也被推送)
    # Automatically push relevant annotated tags along with commits
    followTags = true

[submodule]
    # git 操作時會自動遞迴處理子模組 (例如 clone, update)
    # Automatically recurse into submodules for clone/update
    recurse = true

[rerere]
    # 啟用「reuse recorded resolution」，記錄並重用之前解決過的衝突
    # Enable "reuse recorded resolution" to remember conflict resolutions
    enabled = true

    # 在偵測到同樣衝突時，自動套用之前的解法
    # Automatically apply previous resolutions when the same conflict appears
    autoupdate = true
