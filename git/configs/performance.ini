[core]
    # 啟用 fsmonitor：透過檔案系統事件監控變更，加速 status/diff
    # Enable fsmonitor: watch filesystem events to avoid full-tree scans
    fsmonitor = true

    # 啟用 fscache：在 macOS/Windows 上快取檔案 metadata，減少系統呼叫
    # Enable fscache: cache file metadata on macOS/Windows to reduce syscalls
    fscache = true

    # Speed up commands involving untracked files such as `git status`.
    # https://git-scm.com/docs/git-update-index#_untracked_cache
    untrackedCache = true

[index]
    # 使用多執行緒處理 index (0 = 自動偵測可用 CPU threads)
    # Multithreaded index handling (0 = auto-detect available CPU threads)
    threads = 0

[pack]
    # 在壓縮 packfile 時使用稀疏模式，降低記憶體佔用
    # Use sparse mode for packfile compression to save memory
    useSparse = true

    # 使用多執行緒壓縮 packfile (0 = 自動偵測 threads)
    # Multithreaded packfile compression (0 = auto-detect threads)
    threads = 0

[repack]
    # 在重新打包 (git repack) 時建立 bitmap 索引
    # Write bitmap index when repacking to speed up operations
    writeBitmaps = true

[fetch]
    # 使用 skipping 演算法加速 negotiation（略過部分歷史交集檢查）
    # Use 'skipping' algorithm to speed up negotiation (skip some history checks)
    negotiationAlgorithm = skipping

    # 抓取時自動清理已刪除的 remote 分支
    # Prune deleted remote branches on fetch
    prune = true

    # 同步清理 remote 已刪除的 tags
    # Prune deleted remote tags on fetch
    pruneTags = true

    # 抓取完成後自動更新 commit-graph，加速後續操作
    # Automatically update commit-graph after fetch to speed up later operations
    writeCommitGraph = true

    # 預設從所有 remote 抓取，而不僅僅是 origin
    # Fetch from all remotes by default, not just origin
    all = true

[gc]
    # 停用自動垃圾回收以加速操作；需手動執行 `git gc` 清理空間
    # Disable automatic garbage collection for speed; run `git gc` manually when needed
    auto = 0

    # 自動寫入 commit-graph，加速 log/diff/merge 計算
    # Write commit-graph to speed up log/diff/merge operations
    writeCommitGraph = true